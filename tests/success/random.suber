let t1 = (let rec x = {a = x; b = x} in x)
let t2 = (let rec x = fun v -> {a = x v; b = x v} in x)
let t3 = (fun x -> (let y = (x x) in 0))
let t4 = (let rec x = (fun y -> (y (x x))) in x)
let t5 = fun next -> 0
let t6 = ((fun x -> (x x)) (fun x -> x))
let t7 = (let rec x = (fun y -> (x (y y))) in x)
let t8 = fun x -> (fun y -> (x (y y)))
let t9 = (let rec x = (let y = (x x) in (fun z -> z)) in x)
let tt1 = (let rec x = (fun y -> (let z = (x x) in y)) in x)
let tt2 = (let rec x = (fun y -> {u = y; v = (x x)}) in x)
let tt3 = (let rec x = (fun y -> {u = (x x); v = y}) in x)
let tt4 = (let rec x = (fun y -> (let z = (y x) in y)) in x)
let tt5 = (fun x -> (let y = (x x.v) in 0))
let tt6 = let rec x = (let y = (x x) in (fun z -> z)) in (x (fun y -> y.u))