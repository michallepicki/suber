let t1 = fun x -> x x
let t2 = fun x -> x x x
let t3 = fun x -> fun y -> x y x
let t4 = fun x -> fun y -> x x y
let t5 = (fun x -> x x) (fun x -> x x)
let t6 = fun x -> {l = x x; r = x }
let t7 = (fun f -> (fun x -> f (x x)) (fun x -> f (x x)))
let t8 = (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
let t9 = (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v))) (fun f -> fun x -> f)
let tt1 = let rec trutru = fun g -> trutru (g true) in trutru
let tt2 = fun i -> if ((i i) true) then true else true